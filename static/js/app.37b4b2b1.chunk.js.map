{"version":3,"sources":["src/components/CreditCard.js","src/components/ShoppingCart.js","src/actions/shoppingCart.js","src/containers/shoppingCartPage.js","src/initialState.js","src/reducers/shoppingCart.js","src/reducers/rootReducer.js","src/store.js","App.js","index.js"],"names":["styles","StyleSheet","create","container","flex","avoider","button","backgroundColor","marginTop","CreditCard","formMethods","useForm","mode","defaultValues","holderName","cardNumber","expiration","cvv","handleSubmit","formState","SafeAreaView","style","KeyboardAvoidingView","behavior","Platform","OS","LottieView","horizontalStart","inputColors","focused","errored","regular","autoFocus","overrides","errorText","color","input","borderTopWidth","borderLeftWidth","borderRightWidth","inputLabel","labelContainer","outline","width","cardPreview","margin","fontSize","labelText","title","onPress","model","Alert","alert","JSON","stringify","ShoppingCart","increament","id","quantity","changeQuantity","props","delectProduct","deleteProduct","decrement","getSubTotal","products","totalQntyPrice","_","forEach","product","totalQuantityPrice","this","View","flexDirection","padding","flexWrap","containerStyle","borderWidth","opacity","shadowOpacity","shadowRadius","Title","alignSelf","fontFamily","map","u","i","paddingTop","paddingBottom","key","marginVertical","justifyContent","alignContent","Image","source","uri","avatar","height","borderRadius","Text","fontWeight","name","code","TouchableOpacity","TextInput","type","editable","value","marginHorizontal","borderColor","textAlign","Divider","Component","headBlock","ShoppingCartPage","state","console","log","connect","shoppingCart","dispatch","bindActionCreators","price","rootReducer","combineReducers","initialState","action","index","findIndex","newState","item","actualState","remove","store","createStore","registerRootComponent"],"mappings":"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","file":"static/js/app.37b4b2b1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FormProvider, useForm } from 'react-hook-form'\r\nimport {\r\n  Alert,\r\n  StyleSheet,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  SafeAreaView,\r\n} from 'react-native'\r\nimport LottieView from 'lottie-react-native'\r\nimport CreditCardForm, { Button, FormModel } from 'rn-credit-card'\r\n\r\nconst CreditCard = () => {\r\n  const formMethods = useForm({\r\n    // to trigger the validation on the blur event\r\n    mode: 'onBlur',\r\n    defaultValues: {\r\n      holderName: '',\r\n      cardNumber: '',\r\n      expiration: '',\r\n      cvv: '',\r\n    },\r\n  })\r\n  const { handleSubmit, formState } = formMethods\r\n\r\n  function onSubmit(model) {\r\n    Alert.alert('Success: ' + JSON.stringify(model, null, 2))\r\n  }\r\n\r\n  return (\r\n    <FormProvider {...formMethods}>\r\n      <SafeAreaView style={styles.container}>\r\n        <KeyboardAvoidingView\r\n          style={styles.avoider}\r\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n        >\r\n          <CreditCardForm\r\n            LottieView={LottieView}\r\n            horizontalStart\r\n            inputColors={{\r\n                focused: '#fff',\r\n                errored: '#fff',\r\n                regular: '#B9C4CA',\r\n              }}\r\n              autoFocus={false}\r\n            overrides={{\r\n                errorText:{\r\n                    color:'#fff'\r\n                },\r\n                input:{\r\n                    color:'#fff',\r\n                    borderTopWidth:0,\r\n                    borderLeftWidth:0,\r\n                    borderRightWidth:0\r\n                },\r\n                inputLabel:{\r\n                  backgroundColor:'#3a3b42',\r\n                    // backgroundColor:'rgb(64 64 73)'\r\n\r\n                },\r\n                labelContainer:{\r\n                     backgroundColor:'',\r\n                },\r\n                outline:{\r\n                    width:5\r\n                },\r\n                cardPreview:{\r\n                    margin:5,\r\n                    fontSize:15\r\n                },\r\n              labelText: {\r\n                // marginTop: 10,\r\n                color:'#fff'\r\n              },\r\n            }}\r\n          />\r\n        </KeyboardAvoidingView>\r\n        {/* {formState.isValid && ( */}\r\n          <Button\r\n            style={styles.button}\r\n            title={'Check Out'}\r\n            onPress={handleSubmit(onSubmit)}\r\n          />\r\n        {/* )} */}\r\n      </SafeAreaView>\r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  avoider: {\r\n    flex: 1,\r\n  },\r\n  button: {\r\n    // margin: 36,\r\n    backgroundColor:'#2d7aed',\r\n    marginTop: 0,\r\n  },\r\n})\r\n\r\nexport default CreditCard","import React, { Component } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { Card } from \"react-native-elements\";\r\nimport { Image, TextInput } from \"react-native\";\r\nimport CreditCard from \"./CreditCard\";\r\nimport _ from \"lodash\";\r\n\r\nexport default class ShoppingCart extends Component {\r\n\r\n  increament = (id, quantity) => {\r\n    const { changeQuantity } = this.props;\r\n    changeQuantity(id, quantity + 1);\r\n  };\r\n\r\n  delectProduct = (id) => {\r\n    const { deleteProduct } = this.props;\r\n    deleteProduct(id);\r\n  };\r\n\r\n  decrement = (id, quantity) => {\r\n    const { changeQuantity } = this.props;\r\n    if (quantity > 0) {\r\n      changeQuantity(id, quantity - 1);\r\n    }\r\n  };\r\n\r\n  getSubTotal = () => {\r\n    const { products } = this.props;\r\n    let totalQntyPrice = 0;\r\n    _.forEach(products, (product) => {\r\n      totalQntyPrice = totalQntyPrice + product.totalQuantityPrice;\r\n    });\r\n    return totalQntyPrice;\r\n  };\r\n\r\n  render() {\r\n    const { products } = this.props;\r\n    return (\r\n      <View\r\n        style={{ flex: 1, flexDirection: \"row\", padding: 50, flexWrap: \"wrap\" }}\r\n      >\r\n        <View style={{ flex: 4 }}>\r\n          <Card\r\n            containerStyle={{\r\n              backgroundColor: \"#f2f2f2\",\r\n              borderWidth: 0,\r\n              opacity: 1,\r\n              shadowOpacity: 0,\r\n              shadowRadius: 0,\r\n            }}\r\n          >\r\n            <Card.Title\r\n              style={{ alignSelf: \"flex-start\", fontFamily: \"RobotoMedium\" }}\r\n            >\r\n              Shopping Cart\r\n            </Card.Title>\r\n            {products &&\r\n              products.map((u, i) => {\r\n                return (\r\n                  <View style={{ paddingTop: 15, paddingBottom: 20 }} key={i}>\r\n                    <View\r\n                      key={i}\r\n                      style={{ flexDirection: \"row\", marginVertical: 8 }}\r\n                    >\r\n                      {/* image */}\r\n                      <View\r\n                        style={{\r\n                          flex: 1,\r\n                          justifyContent: \"center\",\r\n                          alignContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <Image\r\n                          source={{ uri: u.avatar }}\r\n                          style={{ width: 80, height: 80, borderRadius: 50 }}\r\n                        />\r\n                      </View>\r\n                      {/* product name */}\r\n                      <View\r\n                        style={{\r\n                          flex: 1.5,\r\n                          justifyContent: \"center\",\r\n                          alignContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{ fontWeight: \"bold\", fontFamily: \"Roboto\" }}\r\n                        >\r\n                          {u.name}\r\n                        </Text>\r\n                        <Text style={{ fontSize: 9, fontFamily: \"Roboto\" }}>\r\n                          {u.code}\r\n                        </Text>\r\n                      </View>\r\n                      {/* quantity */}\r\n                      <View style={{ flex: 1, justifyContent: \"center\" }}>\r\n                        <View\r\n                          style={{ alignSelf: \"center\", flexDirection: \"row\" }}\r\n                        >\r\n                          <TouchableOpacity\r\n                            onPress={() => this.decrement(u.id, u.quantity)}\r\n                          >\r\n                            <Text style={{ fontWeight: \"bold\" }}>-</Text>\r\n                          </TouchableOpacity>\r\n                          <TextInput\r\n                            type=\"number\"\r\n                            editable={false}\r\n                            value={u.quantity}\r\n                            style={{\r\n                              width: \"20%\",\r\n                              marginHorizontal: 10,\r\n                              borderRadius: 5,\r\n                              borderColor: \"#0000004d\",\r\n                              borderWidth: 0.5,\r\n                              textAlign: \"center\",\r\n                            }}\r\n                          />\r\n                          <TouchableOpacity\r\n                            onPress={() => this.increament(u.id, u.quantity)}\r\n                          >\r\n                            <Text style={{ fontWeight: \"bold\" }}>+</Text>\r\n                          </TouchableOpacity>\r\n                        </View>\r\n                      </View>\r\n                      {/* price */}\r\n                      <View style={{ flex: 1, justifyContent: \"center\" }}>\r\n                        <Text\r\n                          style={{ alignSelf: \"center\", fontWeight: \"bold\" }}\r\n                        >\r\n                          ${u.totalQuantityPrice}\r\n                        </Text>\r\n                      </View>\r\n                      {/* close */}\r\n                      <View\r\n                        style={{\r\n                          flex: 1,\r\n                          justifyContent: \"center\",\r\n                          alignContent: \"center\",\r\n                        }}\r\n                      >\r\n                        <TouchableOpacity\r\n                          onPress={() => this.delectProduct(u.id)}\r\n                        >\r\n                          <Text style={{ alignSelf: \"center\" }}>X</Text>\r\n                        </TouchableOpacity>\r\n                        {/* <Text style={{  }}>X</Text> */}\r\n                      </View>\r\n                    </View>\r\n                    <Card.Divider />\r\n                  </View>\r\n                );\r\n              })}\r\n            <View style={{ flexDirection: \"row\" }}>\r\n              <View style={{ alignSelf: \"flex-start\", flex: 3 }}>\r\n                <Text\r\n                  style={{\r\n                    color: \"#4781db\",\r\n                    alignSelf: \"flex-start\",\r\n                    fontWeight: \"bold\",\r\n                    fontFamily: \"Roboto\",\r\n                  }}\r\n                >\r\n                  Continue Shopping\r\n                </Text>\r\n              </View>\r\n              <View style={{ alignSelf: \"flex-end\", flex: 3 }}>\r\n                <Text\r\n                  style={{\r\n                    alignSelf: \"flex-end\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"gray\",\r\n                    fontFamily: \"Roboto\",\r\n                  }}\r\n                >\r\n                  Subtotal: {\"\"}\r\n                  <Text\r\n                    style={{ fontWeight: \"bold\", color: \"black\", fontSize: 24 }}\r\n                  >\r\n                    ${this.getSubTotal()}\r\n                  </Text>\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          </Card>\r\n        </View>\r\n        <View style={{ flex: 1.5 }}>\r\n          <Card containerStyle={{ backgroundColor: \"#404049\" }}>\r\n            <Card.Title\r\n              style={{\r\n                alignSelf: \"flex-start\",\r\n                color: \"white\",\r\n                fontFamily: \"Roboto\",\r\n              }}\r\n            >\r\n              Card Details\r\n            </Card.Title>\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                justifyContent: \"center\",\r\n                alignContent: \"center\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: 9,\r\n                  color: \"#393a4030\",\r\n                  fontFamily: \"Roboto\",\r\n                }}\r\n              >\r\n                Card Type\r\n              </Text>\r\n              <CreditCard />\r\n            </View>\r\n          </Card>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    padding: 20,\r\n  },\r\n  headBlock: {\r\n    flex: 4,\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\n","\r\nexport const CHANGE_QUANTITY = 'CHANGE_QUANTITY'\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT'\r\nexport const GET_SELECTED_PRODUCTS = 'GET_SELECTED_PRODUCTS'\r\n\r\nexport const changeQuantity = (id, value) => ({\r\n    type: CHANGE_QUANTITY,\r\n    id,\r\n    value\r\n});\r\n\r\nexport const deleteProduct = (id) => ({\r\n    type: DELETE_PRODUCT,\r\n    id,\r\n});\r\n\r\nexport const getSelectedProducts = () => ({\r\n    type: GET_SELECTED_PRODUCTS,\r\n})","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport ShoppingCart from \"../components/ShoppingCart\";\r\nimport { changeQuantity, deleteProduct } from \"../actions/shoppingCart\";\r\n\r\nclass ShoppingCartPage extends Component {\r\n  render() {\r\n    const { state, products, changeQuantity, deleteProduct } = this.props;\r\n    console.log(products);\r\n    console.log(state);\r\n    return (\r\n      <ShoppingCart\r\n        products={products}\r\n        changeQuantity={changeQuantity}\r\n        deleteProduct={deleteProduct}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  products: state.shoppingCart.shoppingCart,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      changeQuantity,\r\n      deleteProduct,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartPage);\r\n","export default {\r\n    shoppingCart:[\r\n        {\r\n            id: 1,\r\n            name: \"chicken momo\",\r\n            avatar:\r\n              \"https://images.pexels.com/photos/1640777/pexels-photo-1640777.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n            quantity: 1,\r\n            price: 10,\r\n            code: \"#4231648\",\r\n            totalQuantityPrice:10,\r\n          },\r\n          {\r\n            id:2, \r\n            name: \"Spicy Pasta\",\r\n            avatar:\r\n              \"https://images.pexels.com/photos/3590401/pexels-photo-3590401.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\",\r\n            quantity: 1,\r\n            price: 8,\r\n            code: \"#4231659\",\r\n            totalQuantityPrice:8\r\n          },\r\n          {\r\n            id:3,\r\n            name: \"Tomatoes\",\r\n            avatar:\r\n              \"https://images.pexels.com/photos/262967/pexels-photo-262967.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\r\n            quantity: 1,\r\n            price: 5,\r\n            code: \"#4232658\",\r\n            totalQuantityPrice:5\r\n          }\r\n    ]\r\n}","import initialState from \"../initialState\";\r\nimport _ from \"lodash\";\r\nimport { CHANGE_QUANTITY, DELETE_PRODUCT } from \"../actions/shoppingCart\";\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_QUANTITY:\r\n      const index = _.findIndex(state.shoppingCart, [\"id\", action.id]);\r\n      const newState = [...state.shoppingCart];\r\n      newState.map((item) => {\r\n        if (item.id === newState[index].id) {\r\n          (newState[index].quantity = action.value),\r\n            (newState[index].totalQuantityPrice =\r\n              newState[index].price * action.value);\r\n        }\r\n      });\r\n      return { ...state, newState };\r\n    case DELETE_PRODUCT:\r\n      let actualState = _.remove(state.shoppingCart, (product) => {\r\n        return product.id == action.id;\r\n      });\r\n      return {\r\n        ...state,\r\n        actualState,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport shoppingCart from './shoppingCart'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    shoppingCart\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nconst store = createStore(rootReducer, {});\r\n\r\n\r\nexport default store;","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport ShoppingCartPage from './src/containers/shoppingCartPage';\nimport { Provider } from 'react-redux';\nimport store from './src/store';\n\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Provider store={store}>\n        <ShoppingCartPage />\n      </Provider>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor:\"rgb(242, 242, 242)\"\n  },\n});\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}